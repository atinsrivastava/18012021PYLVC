Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 22:22:05) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> L = list(range(1, 100))
>>> L
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> L2 = []
>>> for n in L:
	L2.append(n**2)

	
>>> L2
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801]
>>> 
>>> 
>>> def sq(n):
	return n**2

>>> L3 = map(sq, L)
>>> L3
<map object at 0x000001E69C5CAEB8>
>>> list(L3)
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801]
>>> 
>>> L4 = map(lambda n : n**2, L)
>>> L4
<map object at 0x000001E69C5CA8D0>
>>> list(L4)
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801]
>>> 
>>> 
>>> 
>>> # ------------------------------------------ Prajaktha
>>> 
>>> import random
>>> L = []
>>> for i in range(100):
	L.append(random.randint(1, 100))

	
>>> L
[54, 20, 42, 2, 51, 45, 16, 64, 62, 45, 93, 43, 84, 87, 46, 85, 100, 26, 92, 13, 12, 49, 89, 44, 49, 42, 15, 7, 99, 45, 78, 39, 53, 35, 77, 20, 44, 98, 22, 3, 2, 56, 62, 92, 26, 49, 46, 60, 62, 99, 93, 57, 14, 72, 98, 18, 38, 17, 92, 49, 87, 78, 92, 82, 61, 100, 88, 23, 99, 48, 27, 65, 42, 44, 95, 64, 94, 28, 82, 64, 26, 59, 17, 39, 74, 15, 20, 29, 62, 2, 16, 14, 37, 79, 86, 77, 50, 38, 56, 3]
>>> F = filter(lambda n : (n % 7 == 0), L)
>>> F
<filter object at 0x000001E69C5AF6A0>
>>> list(F)
[42, 84, 49, 49, 42, 7, 35, 77, 98, 56, 49, 14, 98, 49, 42, 28, 14, 77, 56]
>>> F = filter(lambda n : not (n % 7 == 0), L)
>>> list(F)
[54, 20, 2, 51, 45, 16, 64, 62, 45, 93, 43, 87, 46, 85, 100, 26, 92, 13, 12, 89, 44, 15, 99, 45, 78, 39, 53, 20, 44, 22, 3, 2, 62, 92, 26, 46, 60, 62, 99, 93, 57, 72, 18, 38, 17, 92, 87, 78, 92, 82, 61, 100, 88, 23, 99, 48, 27, 65, 44, 95, 64, 94, 82, 64, 26, 59, 17, 39, 74, 15, 20, 29, 62, 2, 16, 37, 79, 86, 50, 38, 3]
>>> def f(n):
	return (n % 7 == 0)

>>> F = filter(f, L)
>>> list(F)
[42, 84, 49, 49, 42, 7, 35, 77, 98, 56, 49, 14, 98, 49, 42, 28, 14, 77, 56]
>>> 
>>> 

>>> def f1(n):
	return n + 2

>>> F = filter(f1, L)
>>> F
<filter object at 0x000001E69C5CAF28>
>>> list(F)
[54, 20, 42, 2, 51, 45, 16, 64, 62, 45, 93, 43, 84, 87, 46, 85, 100, 26, 92, 13, 12, 49, 89, 44, 49, 42, 15, 7, 99, 45, 78, 39, 53, 35, 77, 20, 44, 98, 22, 3, 2, 56, 62, 92, 26, 49, 46, 60, 62, 99, 93, 57, 14, 72, 98, 18, 38, 17, 92, 49, 87, 78, 92, 82, 61, 100, 88, 23, 99, 48, 27, 65, 42, 44, 95, 64, 94, 28, 82, 64, 26, 59, 17, 39, 74, 15, 20, 29, 62, 2, 16, 14, 37, 79, 86, 77, 50, 38, 56, 3]
>>> F = map(f1, L)
>>> list(F)
[56, 22, 44, 4, 53, 47, 18, 66, 64, 47, 95, 45, 86, 89, 48, 87, 102, 28, 94, 15, 14, 51, 91, 46, 51, 44, 17, 9, 101, 47, 80, 41, 55, 37, 79, 22, 46, 100, 24, 5, 4, 58, 64, 94, 28, 51, 48, 62, 64, 101, 95, 59, 16, 74, 100, 20, 40, 19, 94, 51, 89, 80, 94, 84, 63, 102, 90, 25, 101, 50, 29, 67, 44, 46, 97, 66, 96, 30, 84, 66, 28, 61, 19, 41, 76, 17, 22, 31, 64, 4, 18, 16, 39, 81, 88, 79, 52, 40, 58, 5]
>>> F = filter(lambda n : (n % 7 == 0) and (n % 11 ==0), L)
>>> list(F)
[77, 77]
>>> 
>>> 
>>> C = ["red", "green", "blue", "yellow"]
>>> C1 = filter(lambda s : len(s) >= 4, C)
>>> list(C1)
['green', 'blue', 'yellow']
>>> def x(s):
	return ''

>>> C2 = filter(x, C)
>>> list(C2)
[]
>>> def x(s):
	return None

>>> C3 = filter(x, C)
>>> list(C3)
[]
>>> 
